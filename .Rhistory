library(blogdown)
#### Check the site ####
blogdown::check_site()
blogdown::install_hugo(version = "latest", extended = TRUE)
library(blogdown)
#### Check the site ####
blogdown::check_site()
blogdown::install_hugo("0.123.3")
#### Check the site ####
blogdown::check_site()
#### Serve the cite ####
blogdown::serve_site()
install.packages("xfun")
#### Check the site ####
blogdown::check_site()
blogdown:::preview_site()
#### Serve the cite ####
blogdown::serve_site()
blogdown::build_site()
install.packages("go")
#### Check the site ####
blogdown::check_site()
#### Serve the cite ####
blogdown::serve_site()
blogdown::build_site()
blogdown::install_hugo()
#### Serve the cite ####
blogdown::serve_site()
library(blogdown)
#### Check the site ####
blogdown::check_site()
#### Serve the cite ####
blogdown::serve_site()
#### Build the site ####
blogdown::build_site()
#### Build the site ####
blogdown::hugo_available()
#### Build the site ####
blogdown::hugo_version()
#### Serve the cite ####
blogdown::serve_site()
blogdown::install_hugo(version = blogdown::hugo_version())
blogdown::hugo_version()
#### Build the site ####
blogdown::hugo_version()
blogdown::build_site()
library(blogdown)
remove.packages("blogdown")
library(blogdown)
library(blogdown)
install_hugo()
#### Build the site ####
blogdown::hugo_version()
blogdown::build_site()
#### Check the site ####
blogdown::check_site()
#### Serve the cite ####
blogdown::serve_site()
blogdown::build_site()
#### Build the site ####
blogdown::hugo_version()
#### Build the site ####
blogdown::hugo_version()
blogdown::install_hugo(version = "0.147.0")
library(blogdown)
#### Build the site ####
blogdown::hugo_version()
blogdown::build_site()
#### Check the site ####
blogdown::check_site()
#### Serve the cite ####
blogdown::serve_site()
#### Build the site ####
blogdown::hugo_version()
blogdown::build_site()
#### Check the site ####
blogdown::check_site()
#### Check the site ####
blogdown::check_site()
#### Serve the cite ####
blogdown::serve_site()
#### Build the site ####
blogdown::hugo_version()
#### Serve the cite ####
blogdown::serve_site()
#### Serve the cite ####
blogdown::serve_site()
blogdown::build_site()
#### Serve the cite ####
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site(verbose = T)
blogdown::build_site()
library(blogdown)
blogdown::build_site()
#### Check the site ####
blogdown::check_site()
#### Serve the cite ####
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
new_site(theme = "LoveIt")
#### Check the site ####
blogdown::check_site()
#### Serve the cite ####
blogdown::serve_site()
library(blogdown)
new_site(theme = "LoveIt")
new_site(theme = "dillonzq/LoveIt")
#### Build the site ####
blogdown::hugo_version()
blogdown::build_site()
#### Check the site ####
blogdown::check_site()
#### Serve the cite ####
blogdown::serve_site()
library(blogdown)
new_site(theme = "dillonzq/LoveIt")
blogdown::build_site()
#### Check the site ####
blogdown::check_site()
blogdown::build_site()
new_site(theme = "yihui/hugo-xmin")
#### Serve the cite ####
blogdown::serve_site()
# Stop serving the cite
blogdown::stop_server()
#### Serve the cite ####
blogdown::serve_site()
# Stop serving the cite
blogdown::stop_server()
#### Serve the cite ####
blogdown::serve_site()
# Stop serving the cite
blogdown::stop_server()
#### Serve the site ####
# start serving the site
blogdown::serve_site()
# Stop serving
blogdown::stop_server()
new_site(theme = "HugoBlox/theme-academic-cv")
new_site(theme = "HugoBlox/theme-academic-cv")
#### Serve the site ####
# start serving the site
blogdown::serve_site()
new_site(theme = "yihui/hugo-xmin")
rstudioapi::navigateToFile("content/_index.Rmarkdown", line = 3)
file.edit(".gitignore")
# Stop serving
blogdown::stop_server()
# Stop serving
blogdown::stop_server()
#### Serve the site ####
# start serving the site
blogdown::serve_site()
#### Content ####
# Create a new blog post
blogdown::new_post(title = "Consonant-induced F0 perturbation in Kansai Japanese",
kind = '.Rmarkdown',
subdir = "posts/",
author = getOption("blogdown.author"))
install.packages("revealjs")
#### Content ####
# Create a new blog post
blogdown::new_post(title = "Consonant-induced F0 perturbation in Kansai Japanese",
kind = '.Rmarkdown',
subdir = "post/",
author = getOption("blogdown.author"))
#### Content ####
# Create a new blog post
blogdown::new_post(title = "Consonant-induced F0 perturbation in Kansai Japanese",
kind = '.Rmarkdown',
subdir = "event/",
author = getOption("blogdown.author"))
#### Content ####
# Create a new blog post
blogdown::new_post(title = "Montreal Forced Aligner Tutorial (PAPPS)",
kind = '.Rmarkdown',
subdir = "event/",
author = getOption("blogdown.author"))
# Stop serving
blogdown::stop_server()
blogdown::build_site()
blogdown:::preview_site()
#### Serve the site ####
# start serving the site
blogdown::serve_site()
#### Home page ####
rstudioapi::navigateToFile("content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
# Stop serving
blogdown::stop_server()
#### Serve the site ####
# start serving the site
blogdown::serve_site()
# Stop serving
blogdown::stop_server()
#### Serve the site ####
# start serving the site
blogdown::serve_site()
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
file.edit(".gitignore")
source("~/Documents/GitHub/miaozhang/content/_index.Rmarkdown")
blogdown:::new_post_addin()
blogdown:::preview_site()
library(revealjs)
rmarkdown::render("content/event/2025-04-27-montreal-forced-aligner-tutorial-papps/myslides.Rmd")
rmarkdown::render("content/event/2025-04-27-montreal-forced-aligner-tutorial-papps/index.Rmd")
# Stop serving
blogdown::stop_server()
#### Serve the site ####
# start serving the site
blogdown::serve_site()
# Stop serving
blogdown::stop_server()
blogdown::build_site()
# Stop serving
blogdown::stop_server()
#### Serve the site ####
# start serving the site
blogdown::serve_site()
# Stop serving
blogdown::stop_server()
library(blogdown)
#### Content editting ####
rstudioapi::navigateToFile("~/Documents/GitHub/miaozhang/content/event/2025-04-27-montreal-forced-aligner-tutorial-papps/index.Rmd")
#### Content ####
# Create a new blog post
new_post(title = "Montreal Forced Aligner Tutorial",
kind = '.Rmd',
date = "2025-4-08",
subdir = "event/",
author = getOption("blogdown.author"),
slug = "MFA-tutorial")
#### Content ####
# Create a new blog post
new_post(title = "Montreal Forced Aligner Tutorial",
kind = '.Rmd',
date = "2025-4-08",
subdir = "event/",
author = getOption("blogdown.author"),
slug = "MFA-tutorial")
#### Content ####
# Create a new blog post
new_post(title = "Montreal Forced Aligner Tutorial",
ext = '.md',
date = "2025-4-28",
subdir = "event/",
author = getOption("blogdown.author"),
slug = "MFA-tutorial")
#### Serve the site ####
# start serving the site
serve_site()
#### Serve the site ####
# start serving the site
serve_site()
#### Serve the site ####
# start serving the site
serve_site()
# Create new slides
new_post(title = "Montreal Forced Aligner Tutorial",
ext = '.Rmd',
date = "2025-04-28",
subdir = "static/",
author = "Miao Zhang",
slug = "MFA-tutorial")
help("Deprecated")
install.packages("xaringan")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
install.packages("DiagrammeR")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
new_content(path = "publication/this-one", kind = "2")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
#### Content editting ####
rstudioapi::navigateToFile("~/Documents/GitHub/miaozhang/content/event/2025-04-27-montreal-forced-aligner-tutorial-papps/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
#### Serve the site ####
# start serving the site
serve_site()
library(blogdown)
#### Serve the site ####
# start serving the site
serve_site()
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Stop serving
stop_server()
build_site()
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
#### Content editting ####
rstudioapi::navigateToFile("~/Documents/GitHub/miaozhang/content/event/2025-04-27-montreal-forced-aligner-tutorial-papps/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
blogdown:::preview_site()
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
ipa_text <- "helle\th ɛ l oʊ
world\tw ɜː r l d
computer\tk ə m ˈp j uː t ər
science\ts aɪ ə n s
example\tɪ ɡ z æ m p l̩
dictionary\td ɪ k ʃ ə n ɛ r i
pronunciation\tp r ə n ʌ n s i eɪ ʃ ə n
generator\tdʒ ɛ n ə r eɪ t ər
switzerland\tˈs w ɪ t s ə r l æ n d
zurich\tˈz ʊ r ɪ k"
print(ipa_text, type = "output")
ipa_text <- "helle\th ɛ l oʊ\n
world\tw ɜː r l d\n
computer\tk ə m ˈp j uː t ər\n
science\ts aɪ ə n s\n
example\tɪ ɡ z æ m p l\n̩
dictionary\td ɪ k ʃ ə n ɛ r i\n
pronunciation\tp r ə n ʌ n s i eɪ ʃ ə n\n
generator\tdʒ ɛ n ə r eɪ t ər\n
switzerland\tˈs w ɪ t s ə r l æ n d\n
zurich\tˈz ʊ r ɪ k"
print(ipa_text, type = "output")
ipa_dict <- list(
"hello" = "h ə ˈl o ʊ",
"world" = "w ɜː r l d",
"computer" = "k ə m ˈp j uː t ər",
"science" = "ˈs a ɪ ə n s",
"example" = "ɪ ɡ ˈz æ m p ə l",
"dictionary" = "ˈd ɪ k ʃ ə n ɛ r i",
"pronunciation" = "p r ə ˌn ə n s i ˈe ɪ ʃ ə n",
"generator" = "ˈdʒ ɛ n ə r e ɪ t ər",
"switzerland" = "ˈs w ɪ t s ər l æ n d",
"zurich" = "ˈz ʊ r ɪ k"
)
for (word in names(ipa_dict)) {
cat(sprintf("%s\t%s\n", word, ipa_dict[[word]]))
}
ipa_dict <- list(
"hello" = "h ə l oʊ",
"world" = "w ɜːr l d",
"computer" = "k ə m p j uː t ər",
"science" = "s a ɪ ə n s",
"example" = "ɪ ɡ z æ m p ə l",
"dictionary" = "d ɪ k ʃ ə n ɛ r i",
"pronunciation" = "p r ə n ə n s i eɪ ʃ ə n",
"generator" = "dʒ ɛ n ə r eɪ t ər",
"switzerland" = "s w ɪ t s ər l æ n d",
"zurich" = "z ʊ r ɪ k"
)
for (word in names(ipa_dict)) {
cat(sprintf("%s\t%s\n", word, ipa_dict[[word]]))
}
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
ipa_dict <- list(
"hello" = "h ə l oʊ",
"world" = "w ɜːr l d",
"computer" = "k ə m p j uː t ər",
"science" = "s aɪ ə n s",
"example" = "ɪ ɡ z æ m p ə l",
"dictionary" = "d ɪ k ʃ ə n ɛ r i",
"pronunciation" = "p r ə n ə n s i eɪ ʃ ə n",
"generator" = "dʒ ɛ n ə r eɪ t ər",
"switzerland" = "s w ɪ t s ər l æ n d",
"zurich" = "z ʊ r ɪ k"
)
for (word in names(ipa_dict)) {
cat(sprintf("%s\t%s<br>\n", word, ipa_dict[[word]]))
}
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
#### Content editting ####
rstudioapi::navigateToFile("~/Documents/GitHub/miaozhang/content/event/2025-04-27-montreal-forced-aligner-tutorial-papps/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
# Force render the slides
rmarkdown::render("content/static/2025-04-28-montreal-forced-aligner-tutorial/index.Rmd")
library(blogdown)
# Stop serving
stop_server()
build_site()
#### Serve the site ####
# start serving the site
serve_site()
